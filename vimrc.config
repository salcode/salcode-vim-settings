" .vimrc configuration settings

" ----- Display Options ------
    set nocompatible

    " hide the toolbar
     set guioptions-=T

    " wrap long lines
    set wrap
    " keep three lines visible above and below
    set scrolloff=3


    " show line numbers
    set nu

    " highlight current line
    set cursorline

    " enable syntax highlighting
    syntax enable

    " show matching brackets/parenthesis
    set showmatch

    " search as you type
    set incsearch
    " highlight the search
    set hlsearch

    " ignore case for searches
    set ignorecase
    " ...unless the search uses uppercase letters
    set smartcase

    " show spelling issues
    " set spell

    " instead of beep, flash screen
     set vb t_vb=

    " use clipboard as primary register for y,d,p
     set clipboard=unnamed

    " show list instead of just completing on tab completion
    set wildmenu
    " command <Tab> completion, list matches, then longest common part, then all.
    set wildmode=list:longest,full

    " Highlight invisibles
    set list
    " Highlight these problematic whitespace characters
    set listchars=tab:>.,trail:¬´,extends:#,nbsp:_

" ----- Movement Options ------
    " Moving up/down moves visually.
    " This makes files with very long lines much more manageable.
    " j,k will now move up and down within a line number
    " (if it is a line that wraps)
    nnoremap j gj
    nnoremap k gk

    " Moving left/right will wrap around to the previous/next line.
    set whichwrap=b,s,h,l,<,>,~,[,]
    " Backspace will delete whatever is behind your cursor.
    set backspace=indent,eol,start

    " Bind the 'old' up and down. Use these to skip past a very long line.
    " gj - goes to the next line number
    noremap gj j
    " gk - goes to the previous line number
    noremap gk k

    "tab switching: ctrl+left/right
    nnoremap Od :tabp<CR>
    nnoremap Oc :tabN<CR>

" ----- Indentation ------
    " use spaces, not tabs
    set expandtab
    "set noexpandtab " use tabs

    " 4-space indents
    set softtabstop=4 shiftwidth=4

    " 2-space indents
    "set softtabstop=2 shiftwidth=2

    " to use tabs
    " set noexpandtab
    " set tabstop=4

    " turn on autoindenting (for programming/html)
    set autoindent
    set smartindent " generally recommended against

    "smart indenting by filetype, better than smartindent
    "filetype on
    "filetype indent on
    "filetype plugin on

    " auto fold code
    set foldenable

" ----- Extra FileTypes ------
au BufNewFile,BufRead *.js.tmpl set filetype=javascript

" ----- Pathogen ------
" keep plugins nicely bundled in separate folders.
" http://www.vim.org/scripts/script.php?script_id=2332
runtime autoload/pathogen.vim
if exists('g:loaded_pathogen')
    call pathogen#infect()    "load the bundles, if possible
    Helptags                  "plus any bundled help
    runtime bundle_config.vim "give me a chance to configure the plugins
endif


" ----- Shortcuts for substituting html entities ------
" F2 replace fancy quotes with plain quotes
map <F2> :%s/[‚Äú‚Äù]/"/gc<CR>          
" F3 replace & with &amp;
map <F3> :%s/\s&\s/ \&amp; /gc<CR>
"F4 replace apostrophe with plain apostrophe
map <F4> :%s/‚Äô/'/gc<CR>
" F5 maybe remove duplicate blank lines??? don't know
map <F5> :%s/\r//g<CR>
" F13 add a non-breaking space 
map <F13> :.s/\s\(\S*\s*\)$/\&nbsp;\1/<ESC>

" ----- Modify word boundary characters ------
" remove - as a word boundary (by making it a keyword character)
set iskeyword+=-


